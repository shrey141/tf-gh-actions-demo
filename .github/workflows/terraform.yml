name: "Terraform"

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  checkov:
    name: Checkov
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Run Checkov action
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          soft_fail: true # optional: do not return an error code if there are failed checks
          framework: terraform # optional: run only on a specific infrastructure {cloudformation,terraform,kubernetes,all}
          output_format: json # optional: the output format, one of: cli, json, junitxml, github_failed_only
          log_level: DEBUG # optional: set log level. Default WARNING
  tfsec:
    name: tfsec
    runs-on: ubuntu-latest

    steps:
      - name: Clone repo
        uses: actions/checkout@v2

      - name: tfsec
        uses: aquasecurity/tfsec-pr-commenter-action@main
        with:
          github_token: ${{ github.token }}
  # compliance:
  #   name: Terraform Compliance
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: hashicorp/setup-terraform@v1
  #       with:
  #         # terraform_version: 0.13.0:
  #         cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

  #     - name: Terraform Plan
  #       id: plan
  #       run: |
  #         terraform init && terraform plan -out=plan.out && terraform show -json plan.out > plan.out.json
      
  #     - name: Terraform Compliance
  #       uses: terraform-compliance/github_action@main
  #       with:
  #         plan: plan.out.json
  #         features: ./tests/
  # infracost:
  #   runs-on: ubuntu-latest
  #   name: infracost
  #   steps:
  #     - name: Check out repository
  #       uses: actions/checkout@v2

  #     - name: Run infracost diff
  #       uses: infracost/infracost-gh-action@master # Use a specific version instead of master if locking is preferred
  #       env:
  #         INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Do not change
  #         # See the cloud credentials section for the options
  #       with:
  #         path: ""
  #         terraform_plan_flags: ""
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          # terraform_version: 0.13.0:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        continue-on-error: true

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve
